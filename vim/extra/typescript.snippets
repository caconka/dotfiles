extends javascript
# Angular Component
snippet ng2-component
	import { Component, OnInit } from '@angular/core';

	@Component({
	    moduleId: module.id,
	    selector: '${1:selector}',
	    templateUrl: '${2:ComponentName}.component.html'
	})
	export class ${3:ComponentName}Component implements OnInit {
	    constructor() { }
	    ngOnInit() { }
	    ${4}
	}
# Angular Module
snippet ng2-module
	import { NgModule } from '@angular/core';

	@NgModule({
	  imports: [${1:modules}],
	  declarations: [${2:components}, ${3:directives}],
	  providers: [${4:services}]
	})
	export class ${5:ModuleName} { }
# Angular Service
snippet ng2-service
	import { Injectable } from '@angular/core';

	@Injectable()
	export class ${1:ServiceName}Service {
	    ${2}
	    constructor() { }
	}
# Angular Pipe
snippet ng2-pipe
	import { Pipe, PipeTransform } from '@angular/core';

	@Pipe({
	    name: '${1:name}'
	})

	export class ${2:PipeName}Pipe implements PipeTransform {
	    transform(value: ${3:value-type}, args: any[]) : ${4:value-type} {
		${5}
	    }
	}
# Angular Routes
snippet ng2-routes
	import { RouterModule, Routes } from '@angular/router';

	const APP_ROUTES: Routes = [
	    { path: '${1:url-segment}', component: ${2:component-name} },
	    { path: '**', pathMatch: 'full', redirectTo: '${3:url-segment}' }
	];

	export const APP_ROUTES = RouterModule.forRoot(APP_ROUTES);
# Angular RouteDefinition
snippet ng2-route-path
	{ path: '/${1:path}', component: ${2:Component} }${3}
# Http.get
snippet ng2-http-get
	return this.http.get('${1:url}')
	.map((res: Response) => res.json()${2});
# Subscribe
snippet ng2-subscribe
	this.${1:serviceName}.${2:serviceFunction}
	.subscribe(${3:arg} => this.${4:property} = ${5:arg});
	${6}
# Angular Bootstrapping
snippet ng2-bootstrap
	import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';
	import { enableProdMode } from '@angular/core';
	import { ${1:moduleName} } from './<path-to-module>.module';
	 
	//enableProdMode(); //Uncomment for production
	platformBrowserDynamic().bootstrapModule(${2:moduleName});
# AppComponent
snippet ng2-component-root
	import { Component } from '@angular/core';
	import { HTTP_PROVIDERS } from '@angular/http';
	import { Routes, ROUTER_DIRECTIVES, ROUTER_PROVIDERS } from '@angular/router';
	import 'rxjs/Rx'; // load the full rxjs

	@Component({
	    moduleId: module.id,
	    selector: '${1:selector}',
	    templateUrl: '${2:name}.component.html',
	    directives: [ROUTER_DIRECTIVES],
	    providers: [
		HTTP_PROVIDERS,
	        ROUTER_PROVIDERS
	    ]
	})

	@Routes([
	    ${3}
	])

	export class AppComponent {}
#input
snippet ng2-input
	@Input() ${1:peroperty}: ${2:type};
#output
snippet ng2-output
	@Output() ${1:event}: EventEmitter<type> = new EventEmitter();
#import
snippet ng2-import
	import {${1:ModuleOrComponent}} from '${2:path to component}';
#directive
snippet ng2-directive
	import { Directive, Input } from '@angular/core';

	@Directive({ selector: '[${1:selector}]' })
	export class [DirectiveName]Directive { }
#rx-map
snippet ng2-rx-map
	import 'rxjs/add/operator/map';
