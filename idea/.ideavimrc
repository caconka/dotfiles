""" Map leader to space ---------------------
let mapleader=" "

""" Plugins  --------------------------------
set surround
set commentary
set NERDTree
map <leader>tt :NERDTreeToggle<CR>
map <leader>tf :NERDTreeFind<CR>

""" Plugin settings -------------------------
let g:argtextobj_pairs="[:],(:),<:>"

""" Common settings -------------------------
set relativenumber
set showmode
set so=5
set incsearch
set hlsearch
set ignorecase
set smartcase
set iskeyword

""" Idea specific settings ------------------
set ideajoin
set ideastatusicon=gray
set idearefactormode=keep
set visualbell

""" Mappings --------------------------------
nnoremap <leader><leader> :action ShowIntentionActions<CR>
nnoremap gd :action GotoDeclaration<CR>
nnoremap gi :action GotoImplementation<CR>
nnoremap gs :action GotoSuperMethod<CR>
nnoremap <leader>u :action ShowUsages<CR>
nnoremap <leader>g :action Generate<CR>

nnoremap <leader>f :action FindInPath<CR>
nnoremap <C-p> :action SearchEverywhere<CR>
nnoremap <C-r>+ "+p<CR>

vnoremap <Tab> >gv
vnoremap <S-Tab> <gv

vnoremap == :action ReformatCode<CR>

imap <C-n> <Down>
imap <C-p> <Up>

map <C-l> <action>(NextTab)
map <C-h> <action>(PreviousTab)
map <leader>d <action>(CloseEditor)
map <leader>ad <action>(CloseAllEditorsButActive)

map <C-k> <action>(MoveLineUp)
map <C-j> <action>(MoveLineDown)

map <C-o> <action>(Back)
map <C-i> <action>(Forward)

map <leader>r <action>(RefactoringMenu)
map <leader>z <action>(ToggleDistractionFreeMode)
map <leader>b <action>(ToggleLineBreakpoint)
map <leader>e <action>(GotoNextError)
map <leader>u <action>(FindUsages)

""" Custom commands -------------------------
command! Blame action Annotate
command! History action Vcs.ShowTabbedFileHistory
